#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>


/*
        ////////////////////
        // layer settings //
        ////////////////////
*/
#define LDEF 0 // default
#define LMSK 1 // mouse keys
#define LMSC 2 // mouse scroll
#define LNAV 3 // navigation
#define LFUN 4 // function
#define LSYM 5 // symbol
#define LADJ 6 // adjust
/{
    keymap {
        compatible = "zmk,keymap";
        layer_def:layer_def{};
        layer_msk:layer_msk{};
        layer_msc:layer_msc{};
//        layer_nav:layer_nav{};
//        layer_fun:layer_fun{};
//        layer_sym:layer_sym{};
//        layer_adj:layer_adj{};
    };
};


/*
        ////////////////////////////////////
        // trackball listener & behaviors //
        ////////////////////////////////////
*/

/{
  trackball_listener_mmv { // mouse move
          compatible = "zmk,input-behavior-listener";
          device = <&trackball>;
          layers = <LDEF LMSK>;
          evt-type = <INPUT_EV_REL>;
          x-input-code = <INPUT_REL_X>;
          y-input-code = <INPUT_REL_Y>;
          scale-multiplier = <1>;
          scale-divisor = <1>;
          bindings = <&ib_tog_layer LMSK>; // layer auto activate
  };
  ib_tog_layer: ib_tog_layer { // layer dectivate time
      compatible = "zmk,input-behavior-tog-layer";
      #binding-cells = <1>;
      time-to-live-ms = <750>;
  };
  trackball_listener_msc { // mouse scroll
          compatible = "zmk,input-behavior-listener";
          device = <&trackball>;
          layers = <LMSC LSYM>; 
          evt-type = <INPUT_EV_REL>;
          x-input-code = <INPUT_REL_MISC>;
          y-input-code = <INPUT_REL_WHEEL>;
          y-invert;
          bindings = <&ib_wheel_scaler 1 16>;
  };
  ib_wheel_scaler: ib_wheel_scaler { // scroll config
      compatible = "zmk,input-behavior-scaler";
      #binding-cells = <2>;
      evt-type = <INPUT_EV_REL>;
      input-code = <INPUT_REL_WHEEL>;
  };
};

/*
        //////////////
        // encoders //
        //////////////
*/
/ {
    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
        triggers-per-rotation = <18>;
    };
};

// scroll behavior for encoder
#define ZMK_MOUSE_ENC_SCRL_VAL 70
#define SCRL_ENC_UP MOVE_Y(ZMK_MOUSE_ENC_SCRL_VAL)
#define SCRL_ENC_DOWN MOVE_Y(-ZMK_MOUSE_ENC_SCRL_VAL)
#define SCRL_ENC_LEFT MOVE_X(-ZMK_MOUSE_ENC_SCRL_VAL)
#define SCRL_ENC_RIGHT MOVE_X(ZMK_MOUSE_ENC_SCRL_VAL)
#define ZMK_MOUSE_ENC_SCRL_FAST_VAL 140
#define SCRL_ENC_FAST_UP MOVE_Y(ZMK_MOUSE_ENC_SCRL_FAST_VAL)
#define SCRL_ENC_FAST_DOWN MOVE_Y(-ZMK_MOUSE_ENC_SCRL_FAST_VAL)
#define SCRL_ENC_FAST_LEFT MOVE_X(-ZMK_MOUSE_ENC_SCRL_FAST_VAL)
#define SCRL_ENC_FAST_RIGHT MOVE_X(ZMK_MOUSE_ENC_SCRL_FAST_VAL)
/{
    behaviors{
        scroll_enc_du: scroll_enc_du {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_ENC_DOWN>, <&msc SCRL_ENC_UP>;
            tap-ms = <20>;
        };
        scroll_enc_lr: scroll_enc_lr {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_ENC_LEFT>, <&msc SCRL_ENC_RIGHT>;
            tap-ms = <20>;
        };
    };
};



/*
        //////////////////////////
        // custom key behaviors //
        //////////////////////////
*/

// modify existing behaviors
&mt {
    tapping-term-ms = <175>;
    flavor = "tap-preferred";
};
&lt {
    tapping-term-ms = <175>;
    flavor = "balanced";
};
&sk {
    quick-release;
};
&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

/ {
  behaviors {
    bspc_del: bspc_and_del{
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp BSPC>, <&kp DEL>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };
};

/*
        ////////////
        // combos //
        ////////////
*/

/ {
    combos{
        compatible = "zmk,combos";
        timeout-ms = <200>;

        // T ** ** 03 02 01 00 || 05 06 07 08 ** **
        // M 21 20 13 12 11 10 || 15 16 17 18 25 26
        // B ** 31 30 23 22 ** || ** 27 28 35 36 **
        // Th            32 33 || 37 38

    };
};

/*
        /////////////
        // keymaps //
        /////////////
*/
&layer_def {
    bindings = <
                     &kp W  &kp U &kp F &kp Q           &kp K &kp L &kp R &kp Y   
   &bootloader &kp E &kp I  &kp A &kp O &kp MINUS       &kp G &kp T &kp N &kp S &kp H &bootloader
               &kp Z &kp X  &kp C &kp V                       &kp D &kp M &kp J &kp B 
                           &kp TAB &kp RET              &kp SPACE &kp BSPC

                     &none                               &mkp MCLK
                &none       &none              &mkp LCLK           &mkp RCLK
                     &none                               &mo LMSC
        >;
        sensor-bindings = <&inc_dec_kp L R>;
};
&layer_msk {
    bindings = <
                     &none     &kp LA(UP) &none     &none     &mkp MB4 &kp LA(UP)   &none &none   
         &none &none &mkp RCLK &mkp MCLK  &mkp LCLK &none     &mkp MB5 &none &none &none &none &none
               &none &none     &none      &none                        &none      &none &none &none 
                               &none      &none                        &none      &none

                     &none                               &mkp MCLK
                &none       &none              &mkp LCLK           &mkp RCLK
                     &none                               &mo LMSC
        >;
            sensor-bindings = <&scroll_enc_lr>;
};
&layer_msc {
    bindings = <
                      &trans  &trans &trans &trans     &trans &trans &trans &trans   
        &trans &trans &trans  &trans &trans &trans     &trans &trans &trans &trans &trans &trans
               &trans &trans  &trans &trans                   &trans &trans &trans &trans 
                            &none &none                    &none &none
                     &none                 &none
                &none       &none    &none       &none
                     &none                 &none
        >;
            sensor-bindings = <&scroll_enc_lr>;
};